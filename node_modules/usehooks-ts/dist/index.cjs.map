{"version":3,"sources":["../src/useBoolean/useBoolean.ts","../src/useEventListener/useEventListener.ts","../src/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.ts","../src/useClickAnyWhere/useClickAnyWhere.ts","../src/useCopyToClipboard/useCopyToClipboard.ts","../src/useCountdown/useCountdown.ts","../src/useCounter/useCounter.ts","../src/useInterval/useInterval.ts","../src/useLocalStorage/useLocalStorage.ts","../src/useEventCallback/useEventCallback.ts","../src/useMediaQuery/useMediaQuery.ts","../src/useUpdateEffect/useUpdateEffect.ts","../src/useIsFirstRender/useIsFirstRender.ts","../src/useDarkMode/useDarkMode.ts","../src/useDebounce/useDebounce.ts","../src/useDocumentTitle/useDocumentTitle.ts","../src/useEffectOnce/useEffectOnce.ts","../src/useElementSize/useElementSize.ts","../src/useFetch/useFetch.ts","../src/useHover/useHover.ts","../src/useImageOnLoad/useImageOnLoad.ts","../src/useIntersectionObserver/useIntersectionObserver.ts","../src/useIsClient/useIsClient.ts","../src/useIsMounted/useIsMounted.ts","../src/useLockedBody/useLockedBody.ts","../src/useMap/useMap.ts","../src/useOnClickOutside/useOnClickOutside.ts","../src/useReadLocalStorage/useReadLocalStorage.ts","../src/useScreen/useScreen.ts","../src/useScript/useScript.ts","../src/useSessionStorage/useSessionStorage.ts","../src/useSsr/useSsr.ts","../src/useStep/useStep.ts","../src/useTernaryDarkMode/useTernaryDarkMode.ts","../src/useTimeout/useTimeout.ts","../src/useToggle/useToggle.ts","../src/useWindowSize/useWindowSize.ts"],"names":["useCallback","useState","useBoolean","defaultValue","value","setValue","setTrue","setFalse","toggle","x","useEffect","useRef","useLayoutEffect","useIsomorphicLayoutEffect","useEventListener","eventName","handler","element","options","savedHandler","targetElement","listener","event","useClickAnyWhere","useCopyToClipboard","copiedText","setCopiedText","copy","text","error","useCounter","initialValue","count","setCount","useInterval","callback","delay","savedCallback","id","useCountdown","countdownOption","isDeprecated","countStart","intervalMs","isIncrement","countStop","increment","decrement","resetCounter","isCountdownRunning","startCountdown","stopCountdown","resetCountdown","countdownCallback","useEventCallback","fn","ref","args","IS_SERVER","useLocalStorage","key","readValue","item","parseJSON","storedValue","setStoredValue","newValue","handleStorageChange","getMatches","query","useMediaQuery","matches","setMatches","handleChange","matchMedia","useIsFirstRender","isFirst","useUpdateEffect","effect","deps","COLOR_SCHEME_QUERY","LOCAL_STORAGE_KEY","useDarkMode","localStorageKey","isDarkOS","isDarkMode","setDarkMode","prev","useDebounce","debouncedValue","setDebouncedValue","timer","useDocumentTitle","title","useEffectOnce","useElementSize","setRef","size","setSize","handleSize","useReducer","useFetch","url","cache","cancelRequest","initialState","fetchReducer","state","action","dispatch","response","data","useHover","elementRef","handleMouseEnter","handleMouseLeave","useImageOnLoad","isLoaded","setIsLoaded","useIntersectionObserver","threshold","root","rootMargin","freezeOnceVisible","entry","setEntry","frozen","updateEntry","node","observerParams","observer","useIsClient","isClient","setClient","useIsMounted","isMounted","useLockedBody","initialLocked","rootId","locked","setLocked","originalOverflow","originalPaddingRight","scrollBarWidth","useMap","map","setMap","actions","entries","useOnClickOutside","mouseEvent","el","useReadLocalStorage","useScreen","getScreen","screen","setScreen","cachedScriptStatuses","getScriptNode","src","status","useScript","setStatus","cachedScriptStatus","script","scriptNode","setAttributeFromEvent","scriptStatus","setStateFromEvent","newStatus","useSessionStorage","useSsr","isDOM","useMemo","useStep","maxStep","currentStep","setCurrentStep","canGoToNextStep","canGoToPrevStep","setStep","step","newStep","goToNextStep","goToPrevStep","reset","useTernaryDarkMode","ternaryDarkMode","setTernaryDarkMode","toggleTernaryDarkMode","toggleDict","prevMode","useTimeout","useToggle","useWindowSize","windowSize","setWindowSize"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react'\n\ninterface UseBooleanOutput {\n  value: boolean\n  setValue: Dispatch<SetStateAction<boolean>>\n  setTrue: () => void\n  setFalse: () => void\n  toggle: () => void\n}\n\nexport function useBoolean(defaultValue?: boolean): UseBooleanOutput {\n  const [value, setValue] = useState(!!defaultValue)\n\n  const setTrue = useCallback(() => setValue(true), [])\n  const setFalse = useCallback(() => setValue(false), [])\n  const toggle = useCallback(() => setValue(x => !x), [])\n\n  return { value, setValue, setTrue, setFalse, toggle }\n}\n","import { RefObject, useEffect, useRef } from 'react'\n\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect/useIsomorphicLayoutEffect'\n\n// MediaQueryList Event based useEventListener interface\nfunction useEventListener<K extends keyof MediaQueryListEventMap>(\n  eventName: K,\n  handler: (event: MediaQueryListEventMap[K]) => void,\n  element: RefObject<MediaQueryList>,\n  options?: boolean | AddEventListenerOptions,\n): void\n\n// Window Event based useEventListener interface\nfunction useEventListener<K extends keyof WindowEventMap>(\n  eventName: K,\n  handler: (event: WindowEventMap[K]) => void,\n  element?: undefined,\n  options?: boolean | AddEventListenerOptions,\n): void\n\n// Element Event based useEventListener interface\nfunction useEventListener<\n  K extends keyof HTMLElementEventMap,\n  T extends HTMLElement = HTMLDivElement,\n>(\n  eventName: K,\n  handler: (event: HTMLElementEventMap[K]) => void,\n  element: RefObject<T>,\n  options?: boolean | AddEventListenerOptions,\n): void\n\n// Document Event based useEventListener interface\nfunction useEventListener<K extends keyof DocumentEventMap>(\n  eventName: K,\n  handler: (event: DocumentEventMap[K]) => void,\n  element: RefObject<Document>,\n  options?: boolean | AddEventListenerOptions,\n): void\n\nfunction useEventListener<\n  KW extends keyof WindowEventMap,\n  KH extends keyof HTMLElementEventMap,\n  KM extends keyof MediaQueryListEventMap,\n  T extends HTMLElement | MediaQueryList | void = void,\n>(\n  eventName: KW | KH | KM,\n  handler: (\n    event:\n      | WindowEventMap[KW]\n      | HTMLElementEventMap[KH]\n      | MediaQueryListEventMap[KM]\n      | Event,\n  ) => void,\n  element?: RefObject<T>,\n  options?: boolean | AddEventListenerOptions,\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef(handler)\n\n  useIsomorphicLayoutEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    // Define the listening target\n    const targetElement: T | Window = element?.current ?? window\n\n    if (!(targetElement && targetElement.addEventListener)) return\n\n    // Create event listener that calls handler function stored in ref\n    const listener: typeof handler = event => savedHandler.current(event)\n\n    targetElement.addEventListener(eventName, listener, options)\n\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, listener, options)\n    }\n  }, [eventName, element, options])\n}\n\nexport { useEventListener }\n","import { useEffect, useLayoutEffect } from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useEventListener } from '../useEventListener'\n\ntype Handler = (event: MouseEvent) => void\n\nexport function useClickAnyWhere(handler: Handler) {\n  useEventListener('click', event => {\n    handler(event)\n  })\n}\n","import { useCallback, useState } from 'react'\n\ntype CopiedValue = string | null\ntype CopyFn = (text: string) => Promise<boolean> // Return success\n\nexport function useCopyToClipboard(): [CopiedValue, CopyFn] {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null)\n\n  const copy: CopyFn = useCallback(async text => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported')\n      return false\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopiedText(text)\n      return true\n    } catch (error) {\n      console.warn('Copy failed', error)\n      setCopiedText(null)\n      return false\n    }\n  }, [])\n\n  return [copiedText, copy]\n}\n","import { useCallback } from 'react'\n\nimport { useBoolean } from '../useBoolean'\nimport { useCounter } from '../useCounter'\nimport { useInterval } from '../useInterval'\n\n// Old interface IN & OUT\ninterface UseCountdownType {\n  seconds: number\n  interval: number\n  isIncrement?: boolean\n}\ninterface CountdownHelpers {\n  start: () => void\n  stop: () => void\n  reset: () => void\n}\n\n// New interface IN & OUT\ninterface CountdownOption {\n  countStart: number\n  intervalMs?: number\n  isIncrement?: boolean\n  countStop?: number\n}\ninterface CountdownControllers {\n  startCountdown: () => void\n  stopCountdown: () => void\n  resetCountdown: () => void\n}\n\n/**\n *\n * @param  {UseCountdownType} countdownOption\n * @param  {number} countdownOption.seconds the countdown's number, generally time seconds\n * @param  {number} countdownOption.interval the countdown's interval, milliseconds\n * @param  {?boolean} countdownOption.isIncrement false by default, determine the countdown is increment, otherwise is decrement\n * @returns [counter, CountdownControllers]\n *\n * @deprecated new useCountdown interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3\n */\nexport function useCountdown(\n  countdownOption: UseCountdownType,\n): [number, CountdownHelpers]\n\n/**\n * New interface with default value\n *\n * @param  {CountdownOption} countdownOption\n * @param  {number} countdownOption.countStart - the countdown's starting number, initial value of the returned number.\n * @param  {?number} countdownOption.countStop -  `0` by default, the countdown's stopping number. Pass `-Infinity` to decrease forever.\n * @param  {?number} countdownOption.intervalMs - `1000` by default, the countdown's interval, in milliseconds.\n * @param  {?boolean} countdownOption.isIncrement - `false` by default, true if the countdown is increment.\n * @returns [counter, CountdownControllers]\n */\nexport function useCountdown(\n  countdownOption: CountdownOption,\n): [number, CountdownControllers]\n\nexport function useCountdown(\n  countdownOption: UseCountdownType | CountdownOption,\n): [number, CountdownHelpers | CountdownControllers] {\n  /**\n   * Use to determine the the API call is a deprecated version.\n   */\n  let isDeprecated = false\n\n  let countStart,\n    intervalMs,\n    isIncrement: boolean | undefined,\n    countStop: number | undefined\n\n  if ('seconds' in countdownOption) {\n    console.warn(\n      '[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.',\n    )\n\n    isDeprecated = true\n    countStart = countdownOption.seconds\n    intervalMs = countdownOption.interval\n    isIncrement = countdownOption.isIncrement\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;({ countStart, intervalMs, isIncrement, countStop } = countdownOption)\n  }\n\n  // default values\n  intervalMs = intervalMs ?? 1000\n  isIncrement = isIncrement ?? false\n  countStop = countStop ?? 0\n\n  const {\n    count,\n    increment,\n    decrement,\n    reset: resetCounter,\n  } = useCounter(countStart)\n\n  /**\n   * Note: used to control the useInterval\n   * running: If true, the interval is running\n   * start: Should set running true to trigger interval\n   * stop: Should set running false to remove interval\n   */\n  const {\n    value: isCountdownRunning,\n    setTrue: startCountdown,\n    setFalse: stopCountdown,\n  } = useBoolean(false)\n\n  /**\n   * Will set running false and reset the seconds to initial value\n   */\n  const resetCountdown = () => {\n    stopCountdown()\n    resetCounter()\n  }\n\n  const countdownCallback = useCallback(() => {\n    if (count === countStop) {\n      stopCountdown()\n      return\n    }\n\n    if (isIncrement) {\n      increment()\n    } else {\n      decrement()\n    }\n  }, [count, countStop, decrement, increment, isIncrement, stopCountdown])\n\n  useInterval(countdownCallback, isCountdownRunning ? intervalMs : null)\n\n  return isDeprecated\n    ? [\n        count,\n        {\n          start: startCountdown,\n          stop: stopCountdown,\n          reset: resetCountdown,\n        } as CountdownHelpers,\n      ]\n    : [\n        count,\n        {\n          startCountdown,\n          stopCountdown,\n          resetCountdown,\n        } as CountdownControllers,\n      ]\n}\n","import { Dispatch, SetStateAction, useState } from 'react'\n\ninterface UseCounterOutput {\n  count: number\n  increment: () => void\n  decrement: () => void\n  reset: () => void\n  setCount: Dispatch<SetStateAction<number>>\n}\n\nexport function useCounter(initialValue?: number): UseCounterOutput {\n  const [count, setCount] = useState(initialValue || 0)\n\n  const increment = () => setCount(x => x + 1)\n  const decrement = () => setCount(x => x - 1)\n  const reset = () => setCount(initialValue || 0)\n\n  return {\n    count,\n    increment,\n    decrement,\n    reset,\n    setCount,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (delay === null) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { useEventCallback } from '../useEventCallback'\nimport { useEventListener } from '../useEventListener'\n\ndeclare global {\n  interface WindowEventMap {\n    'local-storage': CustomEvent\n  }\n}\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nconst IS_SERVER = typeof window === 'undefined'\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback((): T => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (IS_SERVER) {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (parseJSON(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }, [initialValue, key])\n\n  // State to store our value\n  // Pass initial value to support hydration server-client\n  const [storedValue, setStoredValue] = useState<T>(initialValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = useEventCallback(value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (IS_SERVER) {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(readValue()) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every similar useLocalStorage hook is notified\n      window.dispatchEvent(new StorageEvent('local-storage', { key }))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  })\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key])\n\n  const handleStorageChange = useCallback(\n    (event: StorageEvent | CustomEvent) => {\n      if ((event as StorageEvent)?.key && (event as StorageEvent).key !== key) {\n        return\n      }\n      setStoredValue(readValue())\n    },\n    [key, readValue],\n  )\n\n  // this only works for other documents, not the current one\n  useEventListener('storage', handleStorageChange)\n\n  // this is a custom event, triggered in writeValueToLocalStorage\n  // See: useLocalStorage()\n  useEventListener('local-storage', handleStorageChange)\n\n  return [storedValue, setValue]\n}\n\n// A wrapper for \"JSON.parse()\"\" to support \"undefined\" value\nfunction parseJSON<T>(value: string | null): T | undefined {\n  try {\n    return value === 'undefined' ? undefined : JSON.parse(value ?? '')\n  } catch {\n    console.warn('parsing error on', { value })\n    return undefined\n  }\n}\n","import { useCallback, useRef } from 'react'\n\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nexport function useEventCallback<Args extends unknown[], R>(\n  fn: (...args: Args) => R,\n) {\n  const ref = useRef<typeof fn>(() => {\n    throw new Error('Cannot call an event handler while rendering.')\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn\n  }, [fn])\n\n  return useCallback((...args: Args) => ref.current(...args), [ref])\n}\n","import { useEffect, useState } from 'react'\n\nconst getMatches = (query: string): boolean => {\n  // Prevents SSR issues\n  if (typeof window !== 'undefined') {\n    return window.matchMedia(query).matches\n  }\n  return false\n}\n\nexport function useMediaQuery(query: string): boolean {\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\n\n  useEffect(() => {\n    function handleChange() {\n      setMatches(getMatches(query))\n    }\n\n    const matchMedia = window.matchMedia(query)\n\n    // Triggered at the first client-side load and if query changes\n    handleChange()\n\n    // Use deprecated `addListener` and `removeListener` to support Safari < 14 (#135)\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange)\n    } else {\n      matchMedia.addEventListener('change', handleChange)\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange)\n      } else {\n        matchMedia.removeEventListener('change', handleChange)\n      }\n    }\n  }, [query])\n\n  return matches\n}\n","import { DependencyList, EffectCallback, useEffect } from 'react'\n\nimport { useIsFirstRender } from '../useIsFirstRender'\n\nexport function useUpdateEffect(effect: EffectCallback, deps?: DependencyList) {\n  const isFirst = useIsFirstRender()\n\n  useEffect(() => {\n    if (!isFirst) {\n      return effect()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n}\n","import { useRef } from 'react'\n\nexport function useIsFirstRender(): boolean {\n  const isFirst = useRef(true)\n\n  if (isFirst.current) {\n    isFirst.current = false\n\n    return true\n  }\n\n  return isFirst.current\n}\n","import { useLocalStorage } from '../useLocalStorage'\nimport { useMediaQuery } from '../useMediaQuery'\nimport { useUpdateEffect } from '../useUpdateEffect'\n\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)'\nconst LOCAL_STORAGE_KEY = 'usehooks-ts-dark-mode'\n\ninterface UseDarkModeOutput {\n  isDarkMode: boolean\n  toggle: () => void\n  enable: () => void\n  disable: () => void\n  set: (value: boolean) => void\n}\n\nexport function useDarkMode(\n  defaultValue?: boolean,\n  localStorageKey: string = LOCAL_STORAGE_KEY,\n): UseDarkModeOutput {\n  const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY)\n  const [isDarkMode, setDarkMode] = useLocalStorage<boolean>(\n    localStorageKey,\n    defaultValue ?? isDarkOS ?? false,\n  )\n\n  // Update darkMode if os prefers changes\n  useUpdateEffect(() => {\n    setDarkMode(isDarkOS)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDarkOS])\n\n  return {\n    isDarkMode,\n    toggle: () => setDarkMode(prev => !prev),\n    enable: () => setDarkMode(true),\n    disable: () => setDarkMode(false),\n    set: value => setDarkMode(value),\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport function useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nexport function useDocumentTitle(title: string): void {\n  useIsomorphicLayoutEffect(() => {\n    window.document.title = title\n  }, [title])\n}\n","import { EffectCallback, useEffect } from 'react'\n\nexport function useEffectOnce(effect: EffectCallback) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, [])\n}\n","import { useCallback, useState } from 'react'\n\nimport { useEventListener } from '../useEventListener'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ninterface Size {\n  width: number\n  height: number\n}\n\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\n  (node: T | null) => void,\n  Size,\n] {\n  // Mutable values like 'ref.current' aren't valid dependencies\n  // because mutating them doesn't re-render the component.\n  // Instead, we use a state as a ref to be reactive.\n  const [ref, setRef] = useState<T | null>(null)\n  const [size, setSize] = useState<Size>({\n    width: 0,\n    height: 0,\n  })\n\n  // Prevent too many rendering using useCallback\n  const handleSize = useCallback(() => {\n    setSize({\n      width: ref?.offsetWidth || 0,\n      height: ref?.offsetHeight || 0,\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  useEventListener('resize', handleSize)\n\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  return [setRef, size]\n}\n","import { useEffect, useReducer, useRef } from 'react'\n\ninterface State<T> {\n  data?: T\n  error?: Error\n}\n\ntype Cache<T> = { [url: string]: T }\n\n// discriminated union type\ntype Action<T> =\n  | { type: 'loading' }\n  | { type: 'fetched'; payload: T }\n  | { type: 'error'; payload: Error }\n\nexport function useFetch<T = unknown>(\n  url?: string,\n  options?: RequestInit,\n): State<T> {\n  const cache = useRef<Cache<T>>({})\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false)\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  }\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case 'loading':\n        return { ...initialState }\n      case 'fetched':\n        return { ...initialState, data: action.payload }\n      case 'error':\n        return { ...initialState, error: action.payload }\n      default:\n        return state\n    }\n  }\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState)\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return\n\n    cancelRequest.current = false\n\n    const fetchData = async () => {\n      dispatch({ type: 'loading' })\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: 'fetched', payload: cache.current[url] })\n        return\n      }\n\n      try {\n        const response = await fetch(url, options)\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n\n        const data = (await response.json()) as T\n        cache.current[url] = data\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'fetched', payload: data })\n      } catch (error) {\n        if (cancelRequest.current) return\n\n        dispatch({ type: 'error', payload: error as Error })\n      }\n    }\n\n    void fetchData()\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url])\n\n  return state\n}\n","import { RefObject, useState } from 'react'\n\nimport { useEventListener } from '../useEventListener'\n\nexport function useHover<T extends HTMLElement = HTMLElement>(\n  elementRef: RefObject<T>,\n): boolean {\n  const [value, setValue] = useState<boolean>(false)\n\n  const handleMouseEnter = () => setValue(true)\n  const handleMouseLeave = () => setValue(false)\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\n\n  return value\n}\n","import { CSSProperties, useState } from 'react'\n\ninterface ImageStyle {\n  thumbnail: CSSProperties\n  fullSize: CSSProperties\n}\n\ninterface ImageOnLoadType {\n  handleImageOnLoad: () => void\n  css: ImageStyle\n}\n\nexport function useImageOnLoad(): ImageOnLoadType {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\n\n  // Triggered when full image will be loaded.\n  const handleImageOnLoad = () => {\n    setIsLoaded(true)\n  }\n\n  const css: ImageStyle = {\n    // Thumbnail style.\n    thumbnail: {\n      visibility: isLoaded ? 'hidden' : 'visible',\n      filter: 'blur(8px)',\n      transition: 'visibility 0ms ease-out 500ms',\n    },\n    // Full image style.\n    fullSize: {\n      opacity: isLoaded ? 1 : 0,\n      transition: 'opacity 500ms ease-in 0ms',\n    },\n  }\n\n  return { handleImageOnLoad, css }\n}\n","import { RefObject, useEffect, useState } from 'react'\n\ninterface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n\nexport function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = '0%',\n    freezeOnceVisible = false,\n  }: Args,\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n\n  useEffect(() => {\n    const node = elementRef?.current // DOM Ref\n    const hasIOSupport = !!window.IntersectionObserver\n\n    if (!hasIOSupport || frozen || !node) return\n\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n\n    observer.observe(node)\n\n    return () => observer.disconnect()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef?.current, JSON.stringify(threshold), root, rootMargin, frozen])\n\n  return entry\n}\n","import { useEffect, useState } from 'react'\n\nexport function useIsClient() {\n  const [isClient, setClient] = useState(false)\n\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  return isClient\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMounted = useRef(false)\n\n  useEffect(() => {\n    isMounted.current = true\n\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return useCallback(() => isMounted.current, [])\n}\n","import { useEffect, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ntype UseLockedBodyOutput = [boolean, (locked: boolean) => void]\n\nexport function useLockedBody(\n  initialLocked = false,\n  rootId = '___gatsby', // Default to `___gatsby` to not introduce breaking change\n): UseLockedBodyOutput {\n  const [locked, setLocked] = useState(initialLocked)\n\n  // Do the side effect before render\n  useIsomorphicLayoutEffect(() => {\n    if (!locked) {\n      return\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow\n    const originalPaddingRight = document.body.style.paddingRight\n\n    // Lock body scroll\n    document.body.style.overflow = 'hidden'\n\n    // Get the scrollBar width\n    const root = document.getElementById(rootId) // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight\n      }\n    }\n  }, [locked])\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked])\n\n  return [locked, setLocked]\n}\n","import { useCallback, useState } from 'react'\n\nexport type MapOrEntries<K, V> = Map<K, V> | [K, V][]\n\n// Public interface\nexport interface Actions<K, V> {\n  set: (key: K, value: V) => void\n  setAll: (entries: MapOrEntries<K, V>) => void\n  remove: (key: K) => void\n  reset: Map<K, V>['clear']\n}\n\n// We hide some setters from the returned map to disable autocompletion\ntype Return<K, V> = [Omit<Map<K, V>, 'set' | 'clear' | 'delete'>, Actions<K, V>]\n\nexport function useMap<K, V>(\n  initialState: MapOrEntries<K, V> = new Map(),\n): Return<K, V> {\n  const [map, setMap] = useState(new Map(initialState))\n\n  const actions: Actions<K, V> = {\n    set: useCallback((key, value) => {\n      setMap(prev => {\n        const copy = new Map(prev)\n        copy.set(key, value)\n        return copy\n      })\n    }, []),\n\n    setAll: useCallback(entries => {\n      setMap(() => new Map(entries))\n    }, []),\n\n    remove: useCallback(key => {\n      setMap(prev => {\n        const copy = new Map(prev)\n        copy.delete(key)\n        return copy\n      })\n    }, []),\n\n    reset: useCallback(() => {\n      setMap(() => new Map())\n    }, []),\n  }\n\n  return [map, actions]\n}\n","import { RefObject } from 'react'\n\nimport { useEventListener } from '../useEventListener'\n\ntype Handler = (event: MouseEvent) => void\n\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: Handler,\n  mouseEvent: 'mousedown' | 'mouseup' = 'mousedown',\n): void {\n  useEventListener(mouseEvent, event => {\n    const el = ref?.current\n\n    // Do nothing if clicking ref's element or descendent elements\n    if (!el || el.contains(event.target as Node)) {\n      return\n    }\n\n    handler(event)\n  })\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useEventListener } from '../useEventListener'\n\ntype Value<T> = T | null\n\nconst IS_SERVER = typeof window === 'undefined'\n\nexport function useReadLocalStorage<T>(key: string): Value<T> {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback((): Value<T> => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (IS_SERVER) {\n      return null\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : null\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return null\n    }\n  }, [key])\n\n  // State to store our value\n  // Pass null as initial value to support hydration server-client\n  const [storedValue, setStoredValue] = useState<Value<T>>(null)\n\n  // Listen if localStorage changes\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key])\n\n  const handleStorageChange = useCallback(\n    (event: StorageEvent | CustomEvent) => {\n      if ((event as StorageEvent)?.key && (event as StorageEvent).key !== key) {\n        return\n      }\n      setStoredValue(readValue())\n    },\n    [key, readValue],\n  )\n\n  // this only works for other documents, not the current one\n  useEventListener('storage', handleStorageChange)\n\n  // this is a custom event, triggered in writeValueToLocalStorage\n  // See: useLocalStorage()\n  useEventListener('local-storage', handleStorageChange)\n\n  return storedValue\n}\n","import { useState } from 'react'\n\nimport { useEventListener } from '../useEventListener'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nexport function useScreen() {\n  const getScreen = () => {\n    if (typeof window !== 'undefined' && window.screen) {\n      return window.screen\n    }\n    return undefined\n  }\n\n  const [screen, setScreen] = useState<Screen | undefined>(getScreen())\n\n  function handleSize() {\n    setScreen(getScreen())\n  }\n\n  useEventListener('resize', handleSize)\n\n  // Set size at the first client-side load\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return screen\n}\n","import { useEffect, useState } from 'react'\n\nexport type UseScriptStatus = 'idle' | 'loading' | 'ready' | 'error'\nexport interface UseScriptOptions {\n  shouldPreventLoad?: boolean\n  removeOnUnmount?: boolean\n}\n\n// Cached script statuses\nconst cachedScriptStatuses: Record<string, UseScriptStatus | undefined> = {}\n\nfunction getScriptNode(src: string) {\n  const node: HTMLScriptElement | null = document.querySelector(\n    `script[src=\"${src}\"]`,\n  )\n  const status = node?.getAttribute('data-status') as\n    | UseScriptStatus\n    | undefined\n\n  return {\n    node,\n    status,\n  }\n}\n\nexport function useScript(\n  src: string | null,\n  options?: UseScriptOptions,\n): UseScriptStatus {\n  const [status, setStatus] = useState<UseScriptStatus>(() => {\n    if (!src || options?.shouldPreventLoad) {\n      return 'idle'\n    }\n\n    if (typeof window === 'undefined') {\n      // SSR Handling - always return 'loading'\n      return 'loading'\n    }\n\n    return cachedScriptStatuses[src] ?? 'loading'\n  })\n\n  useEffect(() => {\n    if (!src || options?.shouldPreventLoad) {\n      return\n    }\n\n    const cachedScriptStatus = cachedScriptStatuses[src]\n    if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n      // If the script is already cached, set its status immediately\n      setStatus(cachedScriptStatus)\n      return\n    }\n\n    // Fetch existing script element by src\n    // It may have been added by another instance of this hook\n    const script = getScriptNode(src)\n    let scriptNode = script.node\n\n    if (!scriptNode) {\n      // Create script element and add it to document body\n      scriptNode = document.createElement('script')\n      scriptNode.src = src\n      scriptNode.async = true\n      scriptNode.setAttribute('data-status', 'loading')\n      document.body.appendChild(scriptNode)\n\n      // Store status in attribute on script\n      // This can be read by other instances of this hook\n      const setAttributeFromEvent = (event: Event) => {\n        const scriptStatus: UseScriptStatus =\n          event.type === 'load' ? 'ready' : 'error'\n\n        scriptNode?.setAttribute('data-status', scriptStatus)\n      }\n\n      scriptNode.addEventListener('load', setAttributeFromEvent)\n      scriptNode.addEventListener('error', setAttributeFromEvent)\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.status ?? cachedScriptStatus ?? 'loading')\n    }\n\n    // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    const setStateFromEvent = (event: Event) => {\n      const newStatus = event.type === 'load' ? 'ready' : 'error'\n      setStatus(newStatus)\n      cachedScriptStatuses[src] = newStatus\n    }\n\n    // Add event listeners\n    scriptNode.addEventListener('load', setStateFromEvent)\n    scriptNode.addEventListener('error', setStateFromEvent)\n\n    // Remove event listeners on cleanup\n    return () => {\n      if (scriptNode) {\n        scriptNode.removeEventListener('load', setStateFromEvent)\n        scriptNode.removeEventListener('error', setStateFromEvent)\n      }\n\n      if (scriptNode && options?.removeOnUnmount) {\n        scriptNode.remove()\n      }\n    }\n  }, [src, options?.shouldPreventLoad, options?.removeOnUnmount])\n\n  return status\n}\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { useEventCallback } from '../useEventCallback'\nimport { useEventListener } from '../useEventListener'\n\ndeclare global {\n  interface WindowEventMap {\n    'session-storage': CustomEvent\n  }\n}\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nconst IS_SERVER = typeof window === 'undefined'\n\nexport function useSessionStorage<T>(\n  key: string,\n  initialValue: T,\n): [T, SetValue<T>] {\n  // Get from session storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback((): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (IS_SERVER) {\n      return initialValue\n    }\n\n    try {\n      const item = window.sessionStorage.getItem(key)\n      return item ? (parseJSON(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading sessionStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }, [initialValue, key])\n\n  // State to store our value\n  // Pass initial value to support hydration server-client\n  const [storedValue, setStoredValue] = useState<T>(initialValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to sessionStorage.\n  const setValue: SetValue<T> = useEventCallback(value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (IS_SERVER) {\n      console.warn(\n        `Tried setting sessionStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(readValue()) : value\n\n      // Save to session storage\n      window.sessionStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every similar useSessionStorage hook is notified\n      window.dispatchEvent(new StorageEvent('session-storage', { key }))\n    } catch (error) {\n      console.warn(`Error setting sessionStorage key “${key}”:`, error)\n    }\n  })\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key])\n\n  const handleStorageChange = useCallback(\n    (event: StorageEvent | CustomEvent) => {\n      if ((event as StorageEvent)?.key && (event as StorageEvent).key !== key) {\n        return\n      }\n      setStoredValue(readValue())\n    },\n    [key, readValue],\n  )\n\n  // this only works for other documents, not the current one\n  useEventListener('storage', handleStorageChange)\n\n  // this is a custom event, triggered in writeValueToSessionStorage\n  // See: useSessionStorage()\n  useEventListener('session-storage', handleStorageChange)\n\n  return [storedValue, setValue]\n}\n\n// A wrapper for \"JSON.parse()\"\" to support \"undefined\" value\nfunction parseJSON<T>(value: string | null): T | undefined {\n  try {\n    return value === 'undefined' ? undefined : JSON.parse(value ?? '')\n  } catch {\n    console.warn('parsing error on', { value })\n    return undefined\n  }\n}\n","/** @deprecated useSsr isn't a valid react hook and will be dropped in the next major release. See #258 */\nexport function useSsr() {\n  const isDOM =\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.documentElement\n\n  return {\n    isBrowser: isDOM,\n    isServer: !isDOM,\n  }\n}\n","import { Dispatch, SetStateAction, useCallback, useMemo, useState } from 'react'\n\ninterface Helpers {\n  goToNextStep: () => void\n  goToPrevStep: () => void\n  reset: () => void\n  canGoToNextStep: boolean\n  canGoToPrevStep: boolean\n  setStep: Dispatch<SetStateAction<number>>\n}\n\ntype setStepCallbackType = (step: number | ((step: number) => number)) => void\n\nexport function useStep(maxStep: number): [number, Helpers] {\n  const [currentStep, setCurrentStep] = useState(1)\n\n  const canGoToNextStep = useMemo(\n    () => currentStep + 1 <= maxStep,\n    [currentStep, maxStep],\n  )\n\n  const canGoToPrevStep = useMemo(() => currentStep - 1 >= 1, [currentStep])\n\n  const setStep = useCallback<setStepCallbackType>(\n    step => {\n      // Allow value to be a function so we have the same API as useState\n      const newStep = step instanceof Function ? step(currentStep) : step\n\n      if (newStep >= 1 && newStep <= maxStep) {\n        setCurrentStep(newStep)\n        return\n      }\n\n      throw new Error('Step not valid')\n    },\n    [maxStep, currentStep],\n  )\n\n  const goToNextStep = useCallback(() => {\n    if (canGoToNextStep) {\n      setCurrentStep(step => step + 1)\n    }\n  }, [canGoToNextStep])\n\n  const goToPrevStep = useCallback(() => {\n    if (canGoToPrevStep) {\n      setCurrentStep(step => step - 1)\n    }\n  }, [canGoToPrevStep])\n\n  const reset = useCallback(() => {\n    setCurrentStep(1)\n  }, [])\n\n  return [\n    currentStep,\n    {\n      goToNextStep,\n      goToPrevStep,\n      canGoToNextStep,\n      canGoToPrevStep,\n      setStep,\n      reset,\n    },\n  ]\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nimport { useLocalStorage } from '../useLocalStorage'\nimport { useMediaQuery } from '../useMediaQuery'\nimport { useUpdateEffect } from '../useUpdateEffect'\n\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)'\nconst LOCAL_STORAGE_KEY = 'usehooks-ts-ternary-dark-mode'\n\ntype TernaryDarkMode = 'system' | 'dark' | 'light'\ninterface UseTernaryDarkModeOutput {\n  isDarkMode: boolean\n  ternaryDarkMode: TernaryDarkMode\n  setTernaryDarkMode: Dispatch<SetStateAction<TernaryDarkMode>>\n  toggleTernaryDarkMode: () => void\n}\n\nexport function useTernaryDarkMode(\n  localStorageKey: string = LOCAL_STORAGE_KEY,\n): UseTernaryDarkModeOutput {\n  const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY)\n  const [ternaryDarkMode, setTernaryDarkMode] =\n    useLocalStorage<TernaryDarkMode>(localStorageKey, 'system')\n  const [isDarkMode, setDarkMode] = useState<boolean>(isDarkOS)\n\n  // Update darkMode if os prefers changes\n  useUpdateEffect(() => {\n    if (ternaryDarkMode === 'system') {\n      setDarkMode(isDarkOS)\n    }\n  }, [isDarkOS])\n\n  useEffect(() => {\n    switch (ternaryDarkMode) {\n      case 'light':\n        setDarkMode(false)\n        break\n      case 'system':\n        setDarkMode(isDarkOS)\n        break\n      case 'dark':\n        setDarkMode(true)\n        break\n    }\n  }, [ternaryDarkMode, isDarkOS])\n\n  function toggleTernaryDarkMode() {\n    const toggleDict: Record<TernaryDarkMode, TernaryDarkMode> = {\n      light: 'system',\n      system: 'dark',\n      dark: 'light',\n    }\n    setTernaryDarkMode(prevMode => toggleDict[prevMode])\n  }\n\n  return {\n    isDarkMode,\n    ternaryDarkMode,\n    setTernaryDarkMode,\n    toggleTernaryDarkMode,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nexport function useTimeout(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the timeout.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return\n    }\n\n    const id = setTimeout(() => savedCallback.current(), delay)\n\n    return () => clearTimeout(id)\n  }, [delay])\n}\n","import { Dispatch, SetStateAction, useCallback, useState } from 'react'\n\nexport function useToggle(\n  defaultValue?: boolean,\n): [boolean, () => void, Dispatch<SetStateAction<boolean>>] {\n  const [value, setValue] = useState(!!defaultValue)\n\n  const toggle = useCallback(() => setValue(x => !x), [])\n\n  return [value, toggle, setValue]\n}\n","import { useState } from 'react'\n\nimport { useEventListener } from '../useEventListener'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ninterface WindowSize {\n  width: number\n  height: number\n}\n\nexport function useWindowSize(): WindowSize {\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: 0,\n    height: 0,\n  })\n\n  const handleSize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    })\n  }\n\n  useEventListener('resize', handleSize)\n\n  // Set size at the first client-side load\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return windowSize\n}\n"]}